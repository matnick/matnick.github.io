(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{173:function(e,t,r){"use strict";r.r(t);var a=r(0),v=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"драйвера-и-разные-типы-скриптов"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#драйвера-и-разные-типы-скриптов","aria-hidden":"true"}},[e._v("#")]),e._v(" Драйвера и разные типы скриптов")]),e._v(" "),r("h2",{attrs:{id:"драйвера"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#драйвера","aria-hidden":"true"}},[e._v("#")]),e._v(" Драйвера")]),e._v(" "),r("p",[e._v("Драйвера нужны для соединения внешних устройств с общей шиной.\nДопустим, у вас есть несколько датчиков температуры."),r("br"),e._v("\nОдин — с интерфейсом Modbus, подключённый через конвертер RS485-TCP, второй — подключённый по радиоканалу LoRa, базовая станция которой отдаёт данные в виде MQTT, третий — от сторонней компании, показания которого забираются через REST-API, вдобавок ещё и в градусах Фаренгейта."),r("br"),e._v("\nВы не можете сравнивать показания этих датчиков напрямую, потому что первый отдаёт показания по запросу, второй сам отправляет их раз в час, третий можно запрашивать только раз в пять минут: вам нужен механизм, который бы генерировал запросы к датчикам с нужной частотой, и механизм, который бы хранил последние значения(для синхронизации данных, следующих с разной частотой)."),r("br"),e._v("\nВ системе GLUE первый механизм — это драйвера устройств, а второй — общая шина.")]),e._v(" "),r("p",[e._v("Драйвер — это скрипт, реализующий конкретный протокол взаимодействия с датчиком (в данном случае — получения данных о температуре), и транслирующий его в команды изменения данных на шине.")]),e._v(" "),r("p",[r("img",{attrs:{src:"images/glueDrivers2.png",alt:"Механизм преобразования протокола устройства в данные на шине",title:"Механизм преобразования протокола устройства в данные на шине"}}),e._v("\nПолучаем изменение значения топика MQTT — превращаем его в команду изменения топика в общей шине."),r("br"),e._v("\nПолучаем ответ на HTTP-запрос в формате JSON — превращаем его в команду изменения топика в общей шине."),r("br"),e._v("\nПриходящие данные в разных протоколах и форматах конвертируются драйверами в универсальные изменения топиков общей шины."),r("br"),e._v("\nИ наоборот — существует механизм, с помощью которого драйвер может узнать о изменении топика и отправить изменённое значение обратно устройству."),r("br"),e._v(" "),r("img",{attrs:{src:"images/glueDrivers1.png",alt:"Механизм обратного распространения данных: из bus к устройству",title:"Механизм обратного распространения данных: из bus к устройству"}})]),e._v(" "),r("h2",{attrs:{id:"bus-event"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bus-event","aria-hidden":"true"}},[e._v("#")]),e._v(" Bus-event")]),e._v(" "),r("p",[e._v("Нужны для быстрой реакции на события."),r("br"),e._v('\nВ них можно проверять выход температуры за уставки: при каждом изменении топика с данными датчика температуры запускается скрипт и проверяет, не превысила ли температура определенную границу. Если превысила, то изменяется топик "питание системы охлаждения", который преобразуется драйвером в команду включения системе охлаждения.')]),e._v(" "),r("h2",{attrs:{id:"timer-event"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#timer-event","aria-hidden":"true"}},[e._v("#")]),e._v(" Timer-event")]),e._v(" "),r("p",[e._v("Нужны для реакции на события, которые могут не подразумевать изменение состояния топиков."),r("br"),e._v("\nНапример, два датчика движения, которые изменяет состояние топика только в случае начала движения и конца движения."),r("br"),e._v("\nЕсли мы хотим выключать свет при отсутствии движения более 10 минут на двух датчиках одновременно, на bus-event это возможно сделать только с привлечением потоков."),r("br"),e._v('\nTimer-event может запускаться раз в минуту и проверять, находятся ли оба датчика в состоянии "нет движения" и находятся ли они в этом состоянии больше 10 минут. В случае совпадения — изменяет топик "яркость освещения".')]),e._v(" "),r("h2",{attrs:{id:"schedule-event"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#schedule-event","aria-hidden":"true"}},[e._v("#")]),e._v(" Schedule-event")]),e._v(" "),r("p",[e._v("Для регулярных действий, которые должны повторяться раз в неделю, или только по определённым дням, слишком сложно высчитывать промежутки в секундах между событиями. Скрипты, выполняемые по расписанию, могут запускаться не с одинаковым периодом, а согласно установленному расписанию. Формат расписания совместим с форматом crontab.")]),e._v(" "),r("p",[e._v('Например, если необходимо выключать освещение в офисе в 7 часов вечера только по будним дням, мы можем сделать скрипт, который будет менять значение топика, который управляет освещением и запустить его со следующим расписанием: **0 0 19 * * MON-FRI *** (что означает "в 0 секунд, в 0 минут, в 19 часов каждый день каждого месяца, в дни недели с понедельника по пятницу, каждого года"). Если же надо выключать свет, только если отсутствует движение, то в коде скрипта можно сделать проверку на состояние топика, который сообщает о наличии движения.')]),e._v(" "),r("blockquote",[r("p",[e._v("Обратите внимание! Взаимодействие с внешними устройствами в событийных скриптах возможно, но нежелательно — для этого существуют драйвера. Логика работы системы подразумевает, что скрипты получают информацию с топиков шины и изменяют информацию на топиках шины. Для общения с внешним миром существуют драйвера(которые в свою очередь, должны конвертировать данные, но не реализовывать конечную логику)."),r("br"),e._v("\nТаким образом, достигается разделение на код, который реализует бизнес-логику, и вспомогательный код, который обеспечивает взаимодействие с устройствами. При соблюдении этих принципов проектирования, становится возможным заменять устройства (с их драйверами) на другие, без необходимости вносить изменения в бизнес-логику.")])]),e._v(" "),r("h2",{attrs:{id:"web-event"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-event","aria-hidden":"true"}},[e._v("#")]),e._v(" Web-event")]),e._v(" "),r("p",[e._v("Как правило, эти скрипты используются для реализации более высокоуровневого API."),r("br"),e._v('\nНапример, пользовательского веб-интерфейса, на котором показывается список датчиков температуры и поле для ввода значения максимальной температуры. Веб-интерфейс запрашивает у web-event скрипта данные и отправляет команду "изменить значение топика с уставкой по температуре".')])])}],!1,null,null,null);v.options.__file="scripts_and_drivers.md";t.default=v.exports}}]);